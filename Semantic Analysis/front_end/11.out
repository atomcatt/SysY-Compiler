Start
# include <stdio.h> -> ExternalDef
ExternalDef -> CompUnit
int x -> FuncFParam
FuncFParam -> FuncFParams
int y -> FuncFParam
FuncFParams , FuncFParam -> FuncFParams
int z -> FuncFParam
FuncFParams , FuncFParam -> FuncFParams
z -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
return Exp ; -> Stmt
Stmt -> BlockItem
BlockItem -> BlockGroup
{ BlockGroup } -> Block
int func ( FuncFParams ) Block -> FuncDef
CompUnit FuncDef -> CompUnit
4 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
[ ConstExp ] -> ConstArrDef
2 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
ConstArrDef [ ConstExp ] -> ConstArrDef
1 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
ConstExp -> ConstInitVal
ConstInitVal -> ConstInitValList
2 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
ConstExp -> ConstInitVal
ConstInitValList , ConstInitVal -> ConstInitValList
{ ConstInitValList } -> ConstInitVal
ConstInitVal -> ConstInitValList
3 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
ConstExp -> ConstInitVal
ConstInitVal -> ConstInitValList
4 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
ConstExp -> ConstInitVal
ConstInitValList , ConstInitVal -> ConstInitValList
{ ConstInitValList } -> ConstInitVal
ConstInitValList , ConstInitVal -> ConstInitValList
{ } -> ConstInitVal
ConstInitValList , ConstInitVal -> ConstInitValList
7 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
ConstExp -> ConstInitVal
ConstInitValList , ConstInitVal -> ConstInitValList
{ ConstInitValList } -> ConstInitVal
a ConstArrDef = ConstInitVal -> ConstDef
ConstDef -> ConstDefList
const int ConstDefList ; -> ConstDecl
ConstDecl -> Decl
CompUnit Decl -> CompUnit
3 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
ConstExp -> ConstInitVal
N = ConstInitVal -> ConstDef
ConstDef -> ConstDefList
const int ConstDefList ; -> ConstDecl
ConstDecl -> Decl
CompUnit Decl -> CompUnit
4 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
[ Exp ] -> ArrDef
2 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
ArrDef [ Exp ] -> ArrDef
{ } -> InitVal
b Arrdef = InitVal -> VarDef
VarDef -> VarDefList
int VarDeclList ; -> VarDecl
VarDecl -> Decl
CompUnit Decl -> CompUnit
4 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
[ Exp ] -> ArrDef
2 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
ArrDef [ Exp ] -> ArrDef
1 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
Exp -> InitVal
InitVal -> InitValList
2 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
Exp -> InitVal
InitValList , InitVal -> InitValList
3 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
Exp -> InitVal
InitValList , InitVal -> InitValList
4 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
Exp -> InitVal
InitValList , InitVal -> InitValList
5 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
Exp -> InitVal
InitValList , InitVal -> InitValList
6 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
Exp -> InitVal
InitValList , InitVal -> InitValList
7 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
Exp -> InitVal
InitValList , InitVal -> InitValList
8 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
Exp -> InitVal
InitValList , InitVal -> InitValList
{ InitValList } -> InitVal
c Arrdef = InitVal -> VarDef
VarDef -> VarDefList
int VarDeclList ; -> VarDecl
VarDecl -> Decl
CompUnit Decl -> CompUnit
N -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
1 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
AddExp + MulExp -> AddExp
AddExp -> ConstExp
[ ConstExp ] -> ConstArrDef
2 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
ConstArrDef [ ConstExp ] -> ConstArrDef
1 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
10 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
AddExp + MulExp -> AddExp
AddExp -> ConstExp
ConstExp -> ConstInitVal
ConstInitVal -> ConstInitValList
2 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
ConstExp -> ConstInitVal
ConstInitValList , ConstInitVal -> ConstInitValList
3 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
ConstExp -> ConstInitVal
ConstInitVal -> ConstInitValList
{ ConstInitValList } -> ConstInitVal
ConstInitValList , ConstInitVal -> ConstInitValList
5 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
ConstExp -> ConstInitVal
ConstInitVal -> ConstInitValList
{ ConstInitValList } -> ConstInitVal
ConstInitValList , ConstInitVal -> ConstInitValList
3 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
[ Exp ] -> ArrDef
0 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
ArrDef [ Exp ] -> ArrDef
Ident ArrDef -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
ConstExp -> ConstInitVal
ConstInitValList , ConstInitVal -> ConstInitValList
8 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> ConstExp
ConstExp -> ConstInitVal
ConstInitValList , ConstInitVal -> ConstInitValList
{ ConstInitValList } -> ConstInitVal
d ConstArrDef = ConstInitVal -> ConstDef
ConstDef -> ConstDefList
const int ConstDefList ; -> ConstDecl
ConstDecl -> Decl
CompUnit Decl -> CompUnit
3 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
[ Exp ] -> ArrDef
1 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
ArrDef [ Exp ] -> ArrDef
0 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
ArrDef [ Exp ] -> ArrDef
Ident ArrDef -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
0 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
[ Exp ] -> ArrDef
0 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
ArrDef [ Exp ] -> ArrDef
0 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
ArrDef [ Exp ] -> ArrDef
Ident ArrDef -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
AddExp + MulExp -> AddExp
0 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
[ Exp ] -> ArrDef
1 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
ArrDef [ Exp ] -> ArrDef
0 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
ArrDef [ Exp ] -> ArrDef
Ident ArrDef -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
AddExp + MulExp -> AddExp
3 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
[ Exp ] -> ArrDef
0 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
ArrDef [ Exp ] -> ArrDef
Ident ArrDef -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
AddExp + MulExp -> AddExp
AddExp -> Exp
Exp -> FuncRParams
"%d\n" , FuncRParams -> FuncRParams
printf ( FuncRParams ) -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
Exp ; -> Stmt
Stmt -> BlockItem
BlockItem -> BlockGroup
0 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
return Exp ; -> Stmt
Stmt -> BlockItem
BlockGroup BlockItem -> BlockGroup
{ BlockGroup } -> Block
int main ( ) Block -> FuncDef
CompUnit FuncDef -> CompUnit
CompUnit -> Start
CompUnitAST
    ExternalDefAST: #include <stdio.h>
    DeclAST
        ConstDeclAST
            ConstDefAST: a
                NumExpAST: 4
                NumExpAST: 2
                ConstInitValAST
                    ConstInitValAST
                        ConstInitValAST
                            NumExpAST: 1
                        ConstInitValAST
                            NumExpAST: 2
                    ConstInitValAST
                        ConstInitValAST
                            NumExpAST: 3
                        ConstInitValAST
                            NumExpAST: 4
                    ConstInitValAST
                        ConstInitValAST
                            {}
                    ConstInitValAST
                        NumExpAST: 7
    DeclAST
        ConstDeclAST
            ConstDefAST: N
                ConstInitValAST
                    NumExpAST: 3
    DeclAST
        VarDeclAST
            VarDefAST: b
                NumExpAST: 4
                NumExpAST: 2
                InitValAST
                    InitValAST
                        { }
    DeclAST
        VarDeclAST
            VarDefAST: c
                NumExpAST: 4
                NumExpAST: 2
                InitValAST
                    InitValAST
                        NumExpAST: 1
                    InitValAST
                        NumExpAST: 2
                    InitValAST
                        NumExpAST: 3
                    InitValAST
                        NumExpAST: 4
                    InitValAST
                        NumExpAST: 5
                    InitValAST
                        NumExpAST: 6
                    InitValAST
                        NumExpAST: 7
                    InitValAST
                        NumExpAST: 8
    DeclAST
        ConstDeclAST
            ConstDefAST: d
                BinaryExpAST: +
                    VarExpAST: N
                    NumExpAST: 1
                NumExpAST: 2
                ConstInitValAST
                    ConstInitValAST
                        Unknown AST Node Type
                    ConstInitValAST
                        NumExpAST: 2
                    ConstInitValAST
                        ConstInitValAST
                            NumExpAST: 3
                    ConstInitValAST
                        ConstInitValAST
                            NumExpAST: 5
                    ConstInitValAST
                        Unknown AST Node Type
                    ConstInitValAST
                        NumExpAST: 8
    FuncDefAST: func
        FuncFParamAST: 
        BlockAST
            BlockItemAST
                ReturnStmtAST
                    VarExpAST: z
    FuncDefAST: main
        BlockAST
            BlockItemAST
                ExpStmtAST
                    FuncCallAST: printf
                        BinaryExpAST: +
                            BinaryExpAST: +
                                BinaryExpAST: +
                                    VarExpAST: e
                                        NumExpAST: 3
                                        NumExpAST: 1
                                        NumExpAST: 0
                                    VarExpAST: e
                                        NumExpAST: 0
                                        NumExpAST: 0
                                        NumExpAST: 0
                                VarExpAST: e
                                    NumExpAST: 0
                                    NumExpAST: 1
                                    NumExpAST: 0
                            VarExpAST: d
                                NumExpAST: 3
                                NumExpAST: 0
            BlockItemAST
                ReturnStmtAST
                    NumExpAST: 0
dim is 4
dim is 2
const_def->ident: a
const_def->dim: 4
const_def->dim: 2
dim_sizes 4
dim_sizes 2
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
full_size = 8
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
full_size = 2
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
values.size() in ConstInitValList = 2
full_size in ConstInitValList = 2
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
full_size = 2
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
values.size() in ConstInitValList = 2
full_size in ConstInitValList = 2
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of monostate
full_size in monostate = 2
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
values.size() in ConstInitValList = 7
full_size in ConstInitValList = 8
fxxk in ConstInitValList
array_flatten done
array_format done
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
const_def->ident: N
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
array_flatten done
array_format done
var_def->ident: b
dim_sizes 4
dim_sizes 2
array_flatten
array_flatten in InitValAST of monostate
array_flatten done
array_format done
var_def->ident: c
dim_sizes 4
dim_sizes 2
array_flatten
array_flatten in InitValAST of InitValListAST
dim_sizes.pop_front() = 4
recusive array_flatten
array_flatten
array_flatten in InitValAST of ExpAST
recusive array_flatten
array_flatten
array_flatten in InitValAST of ExpAST
recusive array_flatten
array_flatten
array_flatten in InitValAST of ExpAST
recusive array_flatten
array_flatten
array_flatten in InitValAST of ExpAST
recusive array_flatten
array_flatten
array_flatten in InitValAST of ExpAST
recusive array_flatten
array_flatten
array_flatten in InitValAST of ExpAST
recusive array_flatten
array_flatten
array_flatten in InitValAST of ExpAST
recusive array_flatten
array_flatten
array_flatten in InitValAST of ExpAST
values.size() in InitValList = 8
full_size in InitValList = 8
array_flatten done
array_format done
ident: N: 3
value: 3
lhs_num_exp value is 3 and rhs_num_exp value is 1
root value is 4
dim is 4
dim is 2
const_def->ident: d
const_def->dim: 4
const_def->dim: 2
dim_sizes 4
dim_sizes 2
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
full_size = 8
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
full_size = 2
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
values.size() in ConstInitValList = 1
full_size in ConstInitValList = 2
fxxk in ConstInitValList
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
full_size = 2
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
values.size() in ConstInitValList = 1
full_size in ConstInitValList = 2
fxxk in ConstInitValList
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
recusive array_flatten
array_flatten
array_flatten of ConstInitValAST
array_flatten in ConstInitValAST of ExpAST
values.size() in ConstInitValList = 8
full_size in ConstInitValList = 8
array_flatten done
array_format done
lhs_num_exp value is 1 and rhs_num_exp value is 10
root value is 11
ident: a: 0
value: 0
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
NSt3__17variantIJNS_9monostateEP6ExpASTP19ConstInitValListASTEEE
