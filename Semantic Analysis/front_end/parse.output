Grammar

    0 $accept: Start $end

    1 Start: CompUnit
    2      | ε

    3 CompUnit: Decl
    4         | FuncDef
    5         | ExternalDef
    6         | CompUnit Decl
    7         | CompUnit FuncDef
    8         | CompUnit ExternalDef

    9 ExternalDef: HASH INCLUDE HeaderFile

   10 Decl: ConstDecl
   11     | VarDecl

   12 ConstDecl: CONST INT ConstDefList SEMI

   13 ConstDefList: ConstDef
   14             | ConstDefList COMMA ConstDef

   15 ConstDef: Ident ASSIGN ConstInitVal
   16         | Ident ConstArrDef ASSIGN ConstInitVal

   17 ConstArrDef: LBRACK ConstExp RBRACK
   18            | ConstArrDef LBRACK ConstExp RBRACK

   19 ArrDef: LBRACK Exp RBRACK
   20       | ArrDef LBRACK Exp RBRACK

   21 ConstInitVal: ConstExp
   22             | LBRACE RBRACE
   23             | LBRACE ConstInitValList RBRACE

   24 ConstInitValList: ConstInitVal
   25                 | ConstInitValList COMMA ConstInitVal

   26 VarDecl: INT VarDefList SEMI

   27 VarDefList: VarDef
   28           | VarDefList COMMA VarDef

   29 VarDef: Ident
   30       | Ident ASSIGN InitVal
   31       | Ident ArrDef
   32       | Ident ArrDef ASSIGN InitVal

   33 InitVal: Exp
   34        | LBRACE RBRACE
   35        | LBRACE InitValList RBRACE

   36 InitValList: InitVal
   37            | InitValList COMMA InitVal

   38 FuncDef: VOID Ident LPAREN RPAREN Block
   39        | INT Ident LPAREN RPAREN Block
   40        | VOID Ident LPAREN FuncFParams RPAREN Block
   41        | INT Ident LPAREN FuncFParams RPAREN Block

   42 FuncFParams: FuncFParam
   43            | FuncFParams COMMA FuncFParam

   44 FuncFParam: INT Ident
   45           | INT Ident LBRACK RBRACK
   46           | INT Ident LBRACK RBRACK ArrDef

   47 Block: LBRACE RBRACE
   48      | LBRACE BlockGroup RBRACE

   49 BlockGroup: BlockItem
   50           | BlockGroup BlockItem

   51 BlockItem: Decl
   52          | Stmt

   53 Stmt: LVal ASSIGN Exp SEMI
   54     | SEMI
   55     | Exp SEMI
   56     | Block
   57     | IF LPAREN Cond RPAREN Stmt
   58     | IF LPAREN Cond RPAREN Stmt ELSE Stmt
   59     | WHILE LPAREN Cond RPAREN Stmt
   60     | BREAK SEMI
   61     | CONTINUE SEMI
   62     | RETURN SEMI
   63     | RETURN Exp SEMI

   64 Exp: AddExp

   65 ConstExp: AddExp

   66 Cond: LOrExp

   67 LVal: Ident
   68     | Ident ArrDef

   69 PrimaryExp: LPAREN Exp RPAREN
   70           | LVal
   71           | IntConst

   72 UnaryExp: PrimaryExp
   73         | Ident LPAREN RPAREN
   74         | Ident LPAREN FuncRParams RPAREN
   75         | UnaryOp UnaryExp

   76 UnaryOp: ADD
   77        | SUB
   78        | NOT

   79 FuncRParams: Exp
   80            | Exp COMMA FuncRParams
   81            | String COMMA FuncRParams

   82 MulExp: UnaryExp
   83       | MulExp MUL UnaryExp
   84       | MulExp DIV UnaryExp
   85       | MulExp MOD UnaryExp

   86 AddExp: MulExp
   87       | AddExp ADD MulExp
   88       | AddExp SUB MulExp

   89 RelExp: AddExp
   90       | RelExp LT AddExp
   91       | RelExp LE AddExp
   92       | RelExp GT AddExp
   93       | RelExp GE AddExp

   94 EqExp: RelExp
   95      | EqExp EQ RelExp
   96      | EqExp NE RelExp

   97 LAndExp: EqExp
   98        | LAndExp AND EqExp

   99 LOrExp: LAndExp
  100       | LOrExp OR LAndExp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INCLUDE (258) 9
    CONST (259) 12
    INT (260) 12 26 39 41 44 45 46
    VOID (261) 38 40
    IF (262) 57 58
    ELSE (263) 58
    WHILE (264) 59
    BREAK (265) 60
    CONTINUE (266) 61
    RETURN (267) 62 63
    ASSIGN (268) 15 16 30 32 53
    AND (269) 98
    OR (270) 100
    EQ (271) 95
    LT (272) 90
    LE (273) 91
    GT (274) 92
    GE (275) 93
    NE (276) 96
    ADD (277) 76 87
    SUB (278) 77 88
    MUL (279) 83
    DIV (280) 84
    MOD (281) 85
    NOT (282) 78
    LPAREN (283) 38 39 40 41 57 58 59 69 73 74
    RPAREN (284) 38 39 40 41 57 58 59 69 73 74
    LBRACE (285) 22 23 34 35 47 48
    RBRACE (286) 22 23 34 35 47 48
    LBRACK (287) 17 18 19 20 45 46
    RBRACK (288) 17 18 19 20 45 46
    COMMA (289) 14 25 28 37 43 80 81
    SEMI (290) 12 26 53 54 55 60 61 62 63
    HASH (291) 9
    Ident <const_string_val> (292) 15 16 29 30 31 32 38 39 40 41 44 45 46 67 68 73 74
    IntConst <const_int_val> (293) 71
    HeaderFile <const_string_val> (294) 9
    String <const_string_val> (295) 81
    IFX (296)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    Start <compunit_type> (43)
        on left: 1 2
        on right: 0
    CompUnit <compunit_type> (44)
        on left: 3 4 5 6 7 8
        on right: 1 6 7 8
    ExternalDef <externaldef_type> (45)
        on left: 9
        on right: 5 8
    Decl <decl_type> (46)
        on left: 10 11
        on right: 3 6 51
    ConstDecl <constdecl_type> (47)
        on left: 12
        on right: 10
    ConstDefList <constdeflist_type> (48)
        on left: 13 14
        on right: 12 14
    ConstDef <constdef_type> (49)
        on left: 15 16
        on right: 13 14
    ConstArrDef <constarrdef_type> (50)
        on left: 17 18
        on right: 16 18
    ArrDef <arrdef_type> (51)
        on left: 19 20
        on right: 20 31 32 46 68
    ConstInitVal <constinitval_type> (52)
        on left: 21 22 23
        on right: 15 16 24 25
    ConstInitValList <constinitvallist_type> (53)
        on left: 24 25
        on right: 23 25
    VarDecl <vardecl_type> (54)
        on left: 26
        on right: 11
    VarDefList <vardeflist_type> (55)
        on left: 27 28
        on right: 26 28
    VarDef <vardef_type> (56)
        on left: 29 30 31 32
        on right: 27 28
    InitVal <initval_type> (57)
        on left: 33 34 35
        on right: 30 32 36 37
    InitValList <initvallist_type> (58)
        on left: 36 37
        on right: 35 37
    FuncDef <funcdef_type> (59)
        on left: 38 39 40 41
        on right: 4 7
    FuncFParams <funcfparams_type> (60)
        on left: 42 43
        on right: 40 41 43
    FuncFParam <funcfparam_type> (61)
        on left: 44 45 46
        on right: 42 43
    Block <block_type> (62)
        on left: 47 48
        on right: 38 39 40 41 56
    BlockGroup <blockgroup_type> (63)
        on left: 49 50
        on right: 48 50
    BlockItem <blockitem_type> (64)
        on left: 51 52
        on right: 49 50
    Stmt <stmt_type> (65)
        on left: 53 54 55 56 57 58 59 60 61 62 63
        on right: 52 57 58 59
    Exp <exp_type> (66)
        on left: 64
        on right: 19 20 33 53 55 63 69 79 80
    ConstExp <exp_type> (67)
        on left: 65
        on right: 17 18 21
    Cond <exp_type> (68)
        on left: 66
        on right: 57 58 59
    LVal <lval_type> (69)
        on left: 67 68
        on right: 53 70
    PrimaryExp <exp_type> (70)
        on left: 69 70 71
        on right: 72
    UnaryExp <exp_type> (71)
        on left: 72 73 74 75
        on right: 75 82 83 84 85
    UnaryOp <unaryop_type> (72)
        on left: 76 77 78
        on right: 75
    FuncRParams <funcrparams_type> (73)
        on left: 79 80 81
        on right: 74 80 81
    MulExp <exp_type> (74)
        on left: 82 83 84 85
        on right: 83 84 85 86 87 88
    AddExp <exp_type> (75)
        on left: 86 87 88
        on right: 64 65 87 88 89 90 91 92 93
    RelExp <exp_type> (76)
        on left: 89 90 91 92 93
        on right: 90 91 92 93 94 95 96
    EqExp <exp_type> (77)
        on left: 94 95 96
        on right: 95 96 97 98
    LAndExp <exp_type> (78)
        on left: 97 98
        on right: 98 99 100
    LOrExp <exp_type> (79)
        on left: 99 100
        on right: 66 100


State 0

    0 $accept: • Start $end

    CONST  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3
    HASH   shift, and go to state 4

    $default  reduce using rule 2 (Start)

    Start        go to state 5
    CompUnit     go to state 6
    ExternalDef  go to state 7
    Decl         go to state 8
    ConstDecl    go to state 9
    VarDecl      go to state 10
    FuncDef      go to state 11


State 1

   12 ConstDecl: CONST • INT ConstDefList SEMI

    INT  shift, and go to state 12


State 2

   26 VarDecl: INT • VarDefList SEMI
   39 FuncDef: INT • Ident LPAREN RPAREN Block
   41        | INT • Ident LPAREN FuncFParams RPAREN Block

    Ident  shift, and go to state 13

    VarDefList  go to state 14
    VarDef      go to state 15


State 3

   38 FuncDef: VOID • Ident LPAREN RPAREN Block
   40        | VOID • Ident LPAREN FuncFParams RPAREN Block

    Ident  shift, and go to state 16


State 4

    9 ExternalDef: HASH • INCLUDE HeaderFile

    INCLUDE  shift, and go to state 17


State 5

    0 $accept: Start • $end

    $end  shift, and go to state 18


State 6

    1 Start: CompUnit •
    6 CompUnit: CompUnit • Decl
    7         | CompUnit • FuncDef
    8         | CompUnit • ExternalDef

    CONST  shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3
    HASH   shift, and go to state 4

    $default  reduce using rule 1 (Start)

    ExternalDef  go to state 19
    Decl         go to state 20
    ConstDecl    go to state 9
    VarDecl      go to state 10
    FuncDef      go to state 21


State 7

    5 CompUnit: ExternalDef •

    $default  reduce using rule 5 (CompUnit)


State 8

    3 CompUnit: Decl •

    $default  reduce using rule 3 (CompUnit)


State 9

   10 Decl: ConstDecl •

    $default  reduce using rule 10 (Decl)


State 10

   11 Decl: VarDecl •

    $default  reduce using rule 11 (Decl)


State 11

    4 CompUnit: FuncDef •

    $default  reduce using rule 4 (CompUnit)


State 12

   12 ConstDecl: CONST INT • ConstDefList SEMI

    Ident  shift, and go to state 22

    ConstDefList  go to state 23
    ConstDef      go to state 24


State 13

   29 VarDef: Ident •
   30       | Ident • ASSIGN InitVal
   31       | Ident • ArrDef
   32       | Ident • ArrDef ASSIGN InitVal
   39 FuncDef: INT Ident • LPAREN RPAREN Block
   41        | INT Ident • LPAREN FuncFParams RPAREN Block

    ASSIGN  shift, and go to state 25
    LPAREN  shift, and go to state 26
    LBRACK  shift, and go to state 27

    $default  reduce using rule 29 (VarDef)

    ArrDef  go to state 28


State 14

   26 VarDecl: INT VarDefList • SEMI
   28 VarDefList: VarDefList • COMMA VarDef

    COMMA  shift, and go to state 29
    SEMI   shift, and go to state 30


State 15

   27 VarDefList: VarDef •

    $default  reduce using rule 27 (VarDefList)


State 16

   38 FuncDef: VOID Ident • LPAREN RPAREN Block
   40        | VOID Ident • LPAREN FuncFParams RPAREN Block

    LPAREN  shift, and go to state 31


State 17

    9 ExternalDef: HASH INCLUDE • HeaderFile

    HeaderFile  shift, and go to state 32


State 18

    0 $accept: Start $end •

    $default  accept


State 19

    8 CompUnit: CompUnit ExternalDef •

    $default  reduce using rule 8 (CompUnit)


State 20

    6 CompUnit: CompUnit Decl •

    $default  reduce using rule 6 (CompUnit)


State 21

    7 CompUnit: CompUnit FuncDef •

    $default  reduce using rule 7 (CompUnit)


State 22

   15 ConstDef: Ident • ASSIGN ConstInitVal
   16         | Ident • ConstArrDef ASSIGN ConstInitVal

    ASSIGN  shift, and go to state 33
    LBRACK  shift, and go to state 34

    ConstArrDef  go to state 35


State 23

   12 ConstDecl: CONST INT ConstDefList • SEMI
   14 ConstDefList: ConstDefList • COMMA ConstDef

    COMMA  shift, and go to state 36
    SEMI   shift, and go to state 37


State 24

   13 ConstDefList: ConstDef •

    $default  reduce using rule 13 (ConstDefList)


State 25

   30 VarDef: Ident ASSIGN • InitVal

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    LBRACE    shift, and go to state 42
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    InitVal     go to state 45
    Exp         go to state 46
    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 26

   39 FuncDef: INT Ident LPAREN • RPAREN Block
   41        | INT Ident LPAREN • FuncFParams RPAREN Block

    INT     shift, and go to state 53
    RPAREN  shift, and go to state 54

    FuncFParams  go to state 55
    FuncFParam   go to state 56


State 27

   19 ArrDef: LBRACK • Exp RBRACK

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    Exp         go to state 57
    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 28

   20 ArrDef: ArrDef • LBRACK Exp RBRACK
   31 VarDef: Ident ArrDef •
   32       | Ident ArrDef • ASSIGN InitVal

    ASSIGN  shift, and go to state 58
    LBRACK  shift, and go to state 59

    $default  reduce using rule 31 (VarDef)


State 29

   28 VarDefList: VarDefList COMMA • VarDef

    Ident  shift, and go to state 60

    VarDef  go to state 61


State 30

   26 VarDecl: INT VarDefList SEMI •

    $default  reduce using rule 26 (VarDecl)


State 31

   38 FuncDef: VOID Ident LPAREN • RPAREN Block
   40        | VOID Ident LPAREN • FuncFParams RPAREN Block

    INT     shift, and go to state 53
    RPAREN  shift, and go to state 62

    FuncFParams  go to state 63
    FuncFParam   go to state 56


State 32

    9 ExternalDef: HASH INCLUDE HeaderFile •

    $default  reduce using rule 9 (ExternalDef)


State 33

   15 ConstDef: Ident ASSIGN • ConstInitVal

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    LBRACE    shift, and go to state 64
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    ConstInitVal  go to state 65
    ConstExp      go to state 66
    LVal          go to state 47
    PrimaryExp    go to state 48
    UnaryExp      go to state 49
    UnaryOp       go to state 50
    MulExp        go to state 51
    AddExp        go to state 67


State 34

   17 ConstArrDef: LBRACK • ConstExp RBRACK

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    ConstExp    go to state 68
    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 67


State 35

   16 ConstDef: Ident ConstArrDef • ASSIGN ConstInitVal
   18 ConstArrDef: ConstArrDef • LBRACK ConstExp RBRACK

    ASSIGN  shift, and go to state 69
    LBRACK  shift, and go to state 70


State 36

   14 ConstDefList: ConstDefList COMMA • ConstDef

    Ident  shift, and go to state 22

    ConstDef  go to state 71


State 37

   12 ConstDecl: CONST INT ConstDefList SEMI •

    $default  reduce using rule 12 (ConstDecl)


State 38

   76 UnaryOp: ADD •

    $default  reduce using rule 76 (UnaryOp)


State 39

   77 UnaryOp: SUB •

    $default  reduce using rule 77 (UnaryOp)


State 40

   78 UnaryOp: NOT •

    $default  reduce using rule 78 (UnaryOp)


State 41

   69 PrimaryExp: LPAREN • Exp RPAREN

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    Exp         go to state 72
    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 42

   34 InitVal: LBRACE • RBRACE
   35        | LBRACE • InitValList RBRACE

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    LBRACE    shift, and go to state 42
    RBRACE    shift, and go to state 73
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    InitVal      go to state 74
    InitValList  go to state 75
    Exp          go to state 46
    LVal         go to state 47
    PrimaryExp   go to state 48
    UnaryExp     go to state 49
    UnaryOp      go to state 50
    MulExp       go to state 51
    AddExp       go to state 52


State 43

   67 LVal: Ident •
   68     | Ident • ArrDef
   73 UnaryExp: Ident • LPAREN RPAREN
   74         | Ident • LPAREN FuncRParams RPAREN

    LPAREN  shift, and go to state 76
    LBRACK  shift, and go to state 27

    $default  reduce using rule 67 (LVal)

    ArrDef  go to state 77


State 44

   71 PrimaryExp: IntConst •

    $default  reduce using rule 71 (PrimaryExp)


State 45

   30 VarDef: Ident ASSIGN InitVal •

    $default  reduce using rule 30 (VarDef)


State 46

   33 InitVal: Exp •

    $default  reduce using rule 33 (InitVal)


State 47

   70 PrimaryExp: LVal •

    $default  reduce using rule 70 (PrimaryExp)


State 48

   72 UnaryExp: PrimaryExp •

    $default  reduce using rule 72 (UnaryExp)


State 49

   82 MulExp: UnaryExp •

    $default  reduce using rule 82 (MulExp)


State 50

   75 UnaryExp: UnaryOp • UnaryExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 78
    UnaryOp     go to state 50


State 51

   83 MulExp: MulExp • MUL UnaryExp
   84       | MulExp • DIV UnaryExp
   85       | MulExp • MOD UnaryExp
   86 AddExp: MulExp •

    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 86 (AddExp)


State 52

   64 Exp: AddExp •
   87 AddExp: AddExp • ADD MulExp
   88       | AddExp • SUB MulExp

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83

    $default  reduce using rule 64 (Exp)


State 53

   44 FuncFParam: INT • Ident
   45           | INT • Ident LBRACK RBRACK
   46           | INT • Ident LBRACK RBRACK ArrDef

    Ident  shift, and go to state 84


State 54

   39 FuncDef: INT Ident LPAREN RPAREN • Block

    LBRACE  shift, and go to state 85

    Block  go to state 86


State 55

   41 FuncDef: INT Ident LPAREN FuncFParams • RPAREN Block
   43 FuncFParams: FuncFParams • COMMA FuncFParam

    RPAREN  shift, and go to state 87
    COMMA   shift, and go to state 88


State 56

   42 FuncFParams: FuncFParam •

    $default  reduce using rule 42 (FuncFParams)


State 57

   19 ArrDef: LBRACK Exp • RBRACK

    RBRACK  shift, and go to state 89


State 58

   32 VarDef: Ident ArrDef ASSIGN • InitVal

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    LBRACE    shift, and go to state 42
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    InitVal     go to state 90
    Exp         go to state 46
    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 59

   20 ArrDef: ArrDef LBRACK • Exp RBRACK

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    Exp         go to state 91
    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 60

   29 VarDef: Ident •
   30       | Ident • ASSIGN InitVal
   31       | Ident • ArrDef
   32       | Ident • ArrDef ASSIGN InitVal

    ASSIGN  shift, and go to state 25
    LBRACK  shift, and go to state 27

    $default  reduce using rule 29 (VarDef)

    ArrDef  go to state 28


State 61

   28 VarDefList: VarDefList COMMA VarDef •

    $default  reduce using rule 28 (VarDefList)


State 62

   38 FuncDef: VOID Ident LPAREN RPAREN • Block

    LBRACE  shift, and go to state 85

    Block  go to state 92


State 63

   40 FuncDef: VOID Ident LPAREN FuncFParams • RPAREN Block
   43 FuncFParams: FuncFParams • COMMA FuncFParam

    RPAREN  shift, and go to state 93
    COMMA   shift, and go to state 88


State 64

   22 ConstInitVal: LBRACE • RBRACE
   23             | LBRACE • ConstInitValList RBRACE

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    LBRACE    shift, and go to state 64
    RBRACE    shift, and go to state 94
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    ConstInitVal      go to state 95
    ConstInitValList  go to state 96
    ConstExp          go to state 66
    LVal              go to state 47
    PrimaryExp        go to state 48
    UnaryExp          go to state 49
    UnaryOp           go to state 50
    MulExp            go to state 51
    AddExp            go to state 67


State 65

   15 ConstDef: Ident ASSIGN ConstInitVal •

    $default  reduce using rule 15 (ConstDef)


State 66

   21 ConstInitVal: ConstExp •

    $default  reduce using rule 21 (ConstInitVal)


State 67

   65 ConstExp: AddExp •
   87 AddExp: AddExp • ADD MulExp
   88       | AddExp • SUB MulExp

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83

    $default  reduce using rule 65 (ConstExp)


State 68

   17 ConstArrDef: LBRACK ConstExp • RBRACK

    RBRACK  shift, and go to state 97


State 69

   16 ConstDef: Ident ConstArrDef ASSIGN • ConstInitVal

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    LBRACE    shift, and go to state 64
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    ConstInitVal  go to state 98
    ConstExp      go to state 66
    LVal          go to state 47
    PrimaryExp    go to state 48
    UnaryExp      go to state 49
    UnaryOp       go to state 50
    MulExp        go to state 51
    AddExp        go to state 67


State 70

   18 ConstArrDef: ConstArrDef LBRACK • ConstExp RBRACK

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    ConstExp    go to state 99
    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 67


State 71

   14 ConstDefList: ConstDefList COMMA ConstDef •

    $default  reduce using rule 14 (ConstDefList)


State 72

   69 PrimaryExp: LPAREN Exp • RPAREN

    RPAREN  shift, and go to state 100


State 73

   34 InitVal: LBRACE RBRACE •

    $default  reduce using rule 34 (InitVal)


State 74

   36 InitValList: InitVal •

    $default  reduce using rule 36 (InitValList)


State 75

   35 InitVal: LBRACE InitValList • RBRACE
   37 InitValList: InitValList • COMMA InitVal

    RBRACE  shift, and go to state 101
    COMMA   shift, and go to state 102


State 76

   73 UnaryExp: Ident LPAREN • RPAREN
   74         | Ident LPAREN • FuncRParams RPAREN

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    RPAREN    shift, and go to state 103
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44
    String    shift, and go to state 104

    Exp          go to state 105
    LVal         go to state 47
    PrimaryExp   go to state 48
    UnaryExp     go to state 49
    UnaryOp      go to state 50
    FuncRParams  go to state 106
    MulExp       go to state 51
    AddExp       go to state 52


State 77

   20 ArrDef: ArrDef • LBRACK Exp RBRACK
   68 LVal: Ident ArrDef •

    LBRACK  shift, and go to state 59

    $default  reduce using rule 68 (LVal)


State 78

   75 UnaryExp: UnaryOp UnaryExp •

    $default  reduce using rule 75 (UnaryExp)


State 79

   83 MulExp: MulExp MUL • UnaryExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 107
    UnaryOp     go to state 50


State 80

   84 MulExp: MulExp DIV • UnaryExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 108
    UnaryOp     go to state 50


State 81

   85 MulExp: MulExp MOD • UnaryExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 109
    UnaryOp     go to state 50


State 82

   87 AddExp: AddExp ADD • MulExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 110


State 83

   88 AddExp: AddExp SUB • MulExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 111


State 84

   44 FuncFParam: INT Ident •
   45           | INT Ident • LBRACK RBRACK
   46           | INT Ident • LBRACK RBRACK ArrDef

    LBRACK  shift, and go to state 112

    $default  reduce using rule 44 (FuncFParam)


State 85

   47 Block: LBRACE • RBRACE
   48      | LBRACE • BlockGroup RBRACE

    CONST     shift, and go to state 1
    INT       shift, and go to state 113
    IF        shift, and go to state 114
    WHILE     shift, and go to state 115
    BREAK     shift, and go to state 116
    CONTINUE  shift, and go to state 117
    RETURN    shift, and go to state 118
    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    LBRACE    shift, and go to state 85
    RBRACE    shift, and go to state 119
    SEMI      shift, and go to state 120
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    Decl        go to state 121
    ConstDecl   go to state 9
    VarDecl     go to state 10
    Block       go to state 122
    BlockGroup  go to state 123
    BlockItem   go to state 124
    Stmt        go to state 125
    Exp         go to state 126
    LVal        go to state 127
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 86

   39 FuncDef: INT Ident LPAREN RPAREN Block •

    $default  reduce using rule 39 (FuncDef)


State 87

   41 FuncDef: INT Ident LPAREN FuncFParams RPAREN • Block

    LBRACE  shift, and go to state 85

    Block  go to state 128


State 88

   43 FuncFParams: FuncFParams COMMA • FuncFParam

    INT  shift, and go to state 53

    FuncFParam  go to state 129


State 89

   19 ArrDef: LBRACK Exp RBRACK •

    $default  reduce using rule 19 (ArrDef)


State 90

   32 VarDef: Ident ArrDef ASSIGN InitVal •

    $default  reduce using rule 32 (VarDef)


State 91

   20 ArrDef: ArrDef LBRACK Exp • RBRACK

    RBRACK  shift, and go to state 130


State 92

   38 FuncDef: VOID Ident LPAREN RPAREN Block •

    $default  reduce using rule 38 (FuncDef)


State 93

   40 FuncDef: VOID Ident LPAREN FuncFParams RPAREN • Block

    LBRACE  shift, and go to state 85

    Block  go to state 131


State 94

   22 ConstInitVal: LBRACE RBRACE •

    $default  reduce using rule 22 (ConstInitVal)


State 95

   24 ConstInitValList: ConstInitVal •

    $default  reduce using rule 24 (ConstInitValList)


State 96

   23 ConstInitVal: LBRACE ConstInitValList • RBRACE
   25 ConstInitValList: ConstInitValList • COMMA ConstInitVal

    RBRACE  shift, and go to state 132
    COMMA   shift, and go to state 133


State 97

   17 ConstArrDef: LBRACK ConstExp RBRACK •

    $default  reduce using rule 17 (ConstArrDef)


State 98

   16 ConstDef: Ident ConstArrDef ASSIGN ConstInitVal •

    $default  reduce using rule 16 (ConstDef)


State 99

   18 ConstArrDef: ConstArrDef LBRACK ConstExp • RBRACK

    RBRACK  shift, and go to state 134


State 100

   69 PrimaryExp: LPAREN Exp RPAREN •

    $default  reduce using rule 69 (PrimaryExp)


State 101

   35 InitVal: LBRACE InitValList RBRACE •

    $default  reduce using rule 35 (InitVal)


State 102

   37 InitValList: InitValList COMMA • InitVal

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    LBRACE    shift, and go to state 42
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    InitVal     go to state 135
    Exp         go to state 46
    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 103

   73 UnaryExp: Ident LPAREN RPAREN •

    $default  reduce using rule 73 (UnaryExp)


State 104

   81 FuncRParams: String • COMMA FuncRParams

    COMMA  shift, and go to state 136


State 105

   79 FuncRParams: Exp •
   80            | Exp • COMMA FuncRParams

    COMMA  shift, and go to state 137

    $default  reduce using rule 79 (FuncRParams)


State 106

   74 UnaryExp: Ident LPAREN FuncRParams • RPAREN

    RPAREN  shift, and go to state 138


State 107

   83 MulExp: MulExp MUL UnaryExp •

    $default  reduce using rule 83 (MulExp)


State 108

   84 MulExp: MulExp DIV UnaryExp •

    $default  reduce using rule 84 (MulExp)


State 109

   85 MulExp: MulExp MOD UnaryExp •

    $default  reduce using rule 85 (MulExp)


State 110

   83 MulExp: MulExp • MUL UnaryExp
   84       | MulExp • DIV UnaryExp
   85       | MulExp • MOD UnaryExp
   87 AddExp: AddExp ADD MulExp •

    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 87 (AddExp)


State 111

   83 MulExp: MulExp • MUL UnaryExp
   84       | MulExp • DIV UnaryExp
   85       | MulExp • MOD UnaryExp
   88 AddExp: AddExp SUB MulExp •

    MUL  shift, and go to state 79
    DIV  shift, and go to state 80
    MOD  shift, and go to state 81

    $default  reduce using rule 88 (AddExp)


State 112

   45 FuncFParam: INT Ident LBRACK • RBRACK
   46           | INT Ident LBRACK • RBRACK ArrDef

    RBRACK  shift, and go to state 139


State 113

   26 VarDecl: INT • VarDefList SEMI

    Ident  shift, and go to state 60

    VarDefList  go to state 14
    VarDef      go to state 15


State 114

   57 Stmt: IF • LPAREN Cond RPAREN Stmt
   58     | IF • LPAREN Cond RPAREN Stmt ELSE Stmt

    LPAREN  shift, and go to state 140


State 115

   59 Stmt: WHILE • LPAREN Cond RPAREN Stmt

    LPAREN  shift, and go to state 141


State 116

   60 Stmt: BREAK • SEMI

    SEMI  shift, and go to state 142


State 117

   61 Stmt: CONTINUE • SEMI

    SEMI  shift, and go to state 143


State 118

   62 Stmt: RETURN • SEMI
   63     | RETURN • Exp SEMI

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    SEMI      shift, and go to state 144
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    Exp         go to state 145
    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 119

   47 Block: LBRACE RBRACE •

    $default  reduce using rule 47 (Block)


State 120

   54 Stmt: SEMI •

    $default  reduce using rule 54 (Stmt)


State 121

   51 BlockItem: Decl •

    $default  reduce using rule 51 (BlockItem)


State 122

   56 Stmt: Block •

    $default  reduce using rule 56 (Stmt)


State 123

   48 Block: LBRACE BlockGroup • RBRACE
   50 BlockGroup: BlockGroup • BlockItem

    CONST     shift, and go to state 1
    INT       shift, and go to state 113
    IF        shift, and go to state 114
    WHILE     shift, and go to state 115
    BREAK     shift, and go to state 116
    CONTINUE  shift, and go to state 117
    RETURN    shift, and go to state 118
    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    LBRACE    shift, and go to state 85
    RBRACE    shift, and go to state 146
    SEMI      shift, and go to state 120
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    Decl        go to state 121
    ConstDecl   go to state 9
    VarDecl     go to state 10
    Block       go to state 122
    BlockItem   go to state 147
    Stmt        go to state 125
    Exp         go to state 126
    LVal        go to state 127
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 124

   49 BlockGroup: BlockItem •

    $default  reduce using rule 49 (BlockGroup)


State 125

   52 BlockItem: Stmt •

    $default  reduce using rule 52 (BlockItem)


State 126

   55 Stmt: Exp • SEMI

    SEMI  shift, and go to state 148


State 127

   53 Stmt: LVal • ASSIGN Exp SEMI
   70 PrimaryExp: LVal •

    ASSIGN  shift, and go to state 149

    $default  reduce using rule 70 (PrimaryExp)


State 128

   41 FuncDef: INT Ident LPAREN FuncFParams RPAREN Block •

    $default  reduce using rule 41 (FuncDef)


State 129

   43 FuncFParams: FuncFParams COMMA FuncFParam •

    $default  reduce using rule 43 (FuncFParams)


State 130

   20 ArrDef: ArrDef LBRACK Exp RBRACK •

    $default  reduce using rule 20 (ArrDef)


State 131

   40 FuncDef: VOID Ident LPAREN FuncFParams RPAREN Block •

    $default  reduce using rule 40 (FuncDef)


State 132

   23 ConstInitVal: LBRACE ConstInitValList RBRACE •

    $default  reduce using rule 23 (ConstInitVal)


State 133

   25 ConstInitValList: ConstInitValList COMMA • ConstInitVal

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    LBRACE    shift, and go to state 64
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    ConstInitVal  go to state 150
    ConstExp      go to state 66
    LVal          go to state 47
    PrimaryExp    go to state 48
    UnaryExp      go to state 49
    UnaryOp       go to state 50
    MulExp        go to state 51
    AddExp        go to state 67


State 134

   18 ConstArrDef: ConstArrDef LBRACK ConstExp RBRACK •

    $default  reduce using rule 18 (ConstArrDef)


State 135

   37 InitValList: InitValList COMMA InitVal •

    $default  reduce using rule 37 (InitValList)


State 136

   81 FuncRParams: String COMMA • FuncRParams

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44
    String    shift, and go to state 104

    Exp          go to state 105
    LVal         go to state 47
    PrimaryExp   go to state 48
    UnaryExp     go to state 49
    UnaryOp      go to state 50
    FuncRParams  go to state 151
    MulExp       go to state 51
    AddExp       go to state 52


State 137

   80 FuncRParams: Exp COMMA • FuncRParams

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44
    String    shift, and go to state 104

    Exp          go to state 105
    LVal         go to state 47
    PrimaryExp   go to state 48
    UnaryExp     go to state 49
    UnaryOp      go to state 50
    FuncRParams  go to state 152
    MulExp       go to state 51
    AddExp       go to state 52


State 138

   74 UnaryExp: Ident LPAREN FuncRParams RPAREN •

    $default  reduce using rule 74 (UnaryExp)


State 139

   45 FuncFParam: INT Ident LBRACK RBRACK •
   46           | INT Ident LBRACK RBRACK • ArrDef

    LBRACK  shift, and go to state 27

    $default  reduce using rule 45 (FuncFParam)

    ArrDef  go to state 153


State 140

   57 Stmt: IF LPAREN • Cond RPAREN Stmt
   58     | IF LPAREN • Cond RPAREN Stmt ELSE Stmt

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    Cond        go to state 154
    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 155
    RelExp      go to state 156
    EqExp       go to state 157
    LAndExp     go to state 158
    LOrExp      go to state 159


State 141

   59 Stmt: WHILE LPAREN • Cond RPAREN Stmt

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    Cond        go to state 160
    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 155
    RelExp      go to state 156
    EqExp       go to state 157
    LAndExp     go to state 158
    LOrExp      go to state 159


State 142

   60 Stmt: BREAK SEMI •

    $default  reduce using rule 60 (Stmt)


State 143

   61 Stmt: CONTINUE SEMI •

    $default  reduce using rule 61 (Stmt)


State 144

   62 Stmt: RETURN SEMI •

    $default  reduce using rule 62 (Stmt)


State 145

   63 Stmt: RETURN Exp • SEMI

    SEMI  shift, and go to state 161


State 146

   48 Block: LBRACE BlockGroup RBRACE •

    $default  reduce using rule 48 (Block)


State 147

   50 BlockGroup: BlockGroup BlockItem •

    $default  reduce using rule 50 (BlockGroup)


State 148

   55 Stmt: Exp SEMI •

    $default  reduce using rule 55 (Stmt)


State 149

   53 Stmt: LVal ASSIGN • Exp SEMI

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    Exp         go to state 162
    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 150

   25 ConstInitValList: ConstInitValList COMMA ConstInitVal •

    $default  reduce using rule 25 (ConstInitValList)


State 151

   81 FuncRParams: String COMMA FuncRParams •

    $default  reduce using rule 81 (FuncRParams)


State 152

   80 FuncRParams: Exp COMMA FuncRParams •

    $default  reduce using rule 80 (FuncRParams)


State 153

   20 ArrDef: ArrDef • LBRACK Exp RBRACK
   46 FuncFParam: INT Ident LBRACK RBRACK ArrDef •

    LBRACK  shift, and go to state 59

    $default  reduce using rule 46 (FuncFParam)


State 154

   57 Stmt: IF LPAREN Cond • RPAREN Stmt
   58     | IF LPAREN Cond • RPAREN Stmt ELSE Stmt

    RPAREN  shift, and go to state 163


State 155

   87 AddExp: AddExp • ADD MulExp
   88       | AddExp • SUB MulExp
   89 RelExp: AddExp •

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83

    $default  reduce using rule 89 (RelExp)


State 156

   90 RelExp: RelExp • LT AddExp
   91       | RelExp • LE AddExp
   92       | RelExp • GT AddExp
   93       | RelExp • GE AddExp
   94 EqExp: RelExp •

    LT  shift, and go to state 164
    LE  shift, and go to state 165
    GT  shift, and go to state 166
    GE  shift, and go to state 167

    $default  reduce using rule 94 (EqExp)


State 157

   95 EqExp: EqExp • EQ RelExp
   96      | EqExp • NE RelExp
   97 LAndExp: EqExp •

    EQ  shift, and go to state 168
    NE  shift, and go to state 169

    $default  reduce using rule 97 (LAndExp)


State 158

   98 LAndExp: LAndExp • AND EqExp
   99 LOrExp: LAndExp •

    AND  shift, and go to state 170

    $default  reduce using rule 99 (LOrExp)


State 159

   66 Cond: LOrExp •
  100 LOrExp: LOrExp • OR LAndExp

    OR  shift, and go to state 171

    $default  reduce using rule 66 (Cond)


State 160

   59 Stmt: WHILE LPAREN Cond • RPAREN Stmt

    RPAREN  shift, and go to state 172


State 161

   63 Stmt: RETURN Exp SEMI •

    $default  reduce using rule 63 (Stmt)


State 162

   53 Stmt: LVal ASSIGN Exp • SEMI

    SEMI  shift, and go to state 173


State 163

   57 Stmt: IF LPAREN Cond RPAREN • Stmt
   58     | IF LPAREN Cond RPAREN • Stmt ELSE Stmt

    IF        shift, and go to state 114
    WHILE     shift, and go to state 115
    BREAK     shift, and go to state 116
    CONTINUE  shift, and go to state 117
    RETURN    shift, and go to state 118
    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    LBRACE    shift, and go to state 85
    SEMI      shift, and go to state 120
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    Block       go to state 122
    Stmt        go to state 174
    Exp         go to state 126
    LVal        go to state 127
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 164

   90 RelExp: RelExp LT • AddExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 175


State 165

   91 RelExp: RelExp LE • AddExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 176


State 166

   92 RelExp: RelExp GT • AddExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 177


State 167

   93 RelExp: RelExp GE • AddExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 178


State 168

   95 EqExp: EqExp EQ • RelExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 155
    RelExp      go to state 179


State 169

   96 EqExp: EqExp NE • RelExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 155
    RelExp      go to state 180


State 170

   98 LAndExp: LAndExp AND • EqExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 155
    RelExp      go to state 156
    EqExp       go to state 181


State 171

  100 LOrExp: LOrExp OR • LAndExp

    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    LVal        go to state 47
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 155
    RelExp      go to state 156
    EqExp       go to state 157
    LAndExp     go to state 182


State 172

   59 Stmt: WHILE LPAREN Cond RPAREN • Stmt

    IF        shift, and go to state 114
    WHILE     shift, and go to state 115
    BREAK     shift, and go to state 116
    CONTINUE  shift, and go to state 117
    RETURN    shift, and go to state 118
    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    LBRACE    shift, and go to state 85
    SEMI      shift, and go to state 120
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    Block       go to state 122
    Stmt        go to state 183
    Exp         go to state 126
    LVal        go to state 127
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 173

   53 Stmt: LVal ASSIGN Exp SEMI •

    $default  reduce using rule 53 (Stmt)


State 174

   57 Stmt: IF LPAREN Cond RPAREN Stmt •
   58     | IF LPAREN Cond RPAREN Stmt • ELSE Stmt

    ELSE  shift, and go to state 184

    $default  reduce using rule 57 (Stmt)


State 175

   87 AddExp: AddExp • ADD MulExp
   88       | AddExp • SUB MulExp
   90 RelExp: RelExp LT AddExp •

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83

    $default  reduce using rule 90 (RelExp)


State 176

   87 AddExp: AddExp • ADD MulExp
   88       | AddExp • SUB MulExp
   91 RelExp: RelExp LE AddExp •

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83

    $default  reduce using rule 91 (RelExp)


State 177

   87 AddExp: AddExp • ADD MulExp
   88       | AddExp • SUB MulExp
   92 RelExp: RelExp GT AddExp •

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83

    $default  reduce using rule 92 (RelExp)


State 178

   87 AddExp: AddExp • ADD MulExp
   88       | AddExp • SUB MulExp
   93 RelExp: RelExp GE AddExp •

    ADD  shift, and go to state 82
    SUB  shift, and go to state 83

    $default  reduce using rule 93 (RelExp)


State 179

   90 RelExp: RelExp • LT AddExp
   91       | RelExp • LE AddExp
   92       | RelExp • GT AddExp
   93       | RelExp • GE AddExp
   95 EqExp: EqExp EQ RelExp •

    LT  shift, and go to state 164
    LE  shift, and go to state 165
    GT  shift, and go to state 166
    GE  shift, and go to state 167

    $default  reduce using rule 95 (EqExp)


State 180

   90 RelExp: RelExp • LT AddExp
   91       | RelExp • LE AddExp
   92       | RelExp • GT AddExp
   93       | RelExp • GE AddExp
   96 EqExp: EqExp NE RelExp •

    LT  shift, and go to state 164
    LE  shift, and go to state 165
    GT  shift, and go to state 166
    GE  shift, and go to state 167

    $default  reduce using rule 96 (EqExp)


State 181

   95 EqExp: EqExp • EQ RelExp
   96      | EqExp • NE RelExp
   98 LAndExp: LAndExp AND EqExp •

    EQ  shift, and go to state 168
    NE  shift, and go to state 169

    $default  reduce using rule 98 (LAndExp)


State 182

   98 LAndExp: LAndExp • AND EqExp
  100 LOrExp: LOrExp OR LAndExp •

    AND  shift, and go to state 170

    $default  reduce using rule 100 (LOrExp)


State 183

   59 Stmt: WHILE LPAREN Cond RPAREN Stmt •

    $default  reduce using rule 59 (Stmt)


State 184

   58 Stmt: IF LPAREN Cond RPAREN Stmt ELSE • Stmt

    IF        shift, and go to state 114
    WHILE     shift, and go to state 115
    BREAK     shift, and go to state 116
    CONTINUE  shift, and go to state 117
    RETURN    shift, and go to state 118
    ADD       shift, and go to state 38
    SUB       shift, and go to state 39
    NOT       shift, and go to state 40
    LPAREN    shift, and go to state 41
    LBRACE    shift, and go to state 85
    SEMI      shift, and go to state 120
    Ident     shift, and go to state 43
    IntConst  shift, and go to state 44

    Block       go to state 122
    Stmt        go to state 185
    Exp         go to state 126
    LVal        go to state 127
    PrimaryExp  go to state 48
    UnaryExp    go to state 49
    UnaryOp     go to state 50
    MulExp      go to state 51
    AddExp      go to state 52


State 185

   58 Stmt: IF LPAREN Cond RPAREN Stmt ELSE Stmt •

    $default  reduce using rule 58 (Stmt)
