a -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> RelExp
RelExp -> EqExp
c -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> RelExp
EqExp == RelExp -> EqExp
EqExp -> LAndExp
LAndExp -> LOrExp
LOrExp -> Cond
a -> LVal
1 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
LVal = Exp ; -> Stmt
Stmt -> BlockItem
BlockItem -> BlockGroup
m -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> RelExp
n -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
RelExp <= AddExp -> RelExp
RelExp -> EqExp
EqExp -> LAndExp
LAndExp -> LOrExp
LOrExp -> Cond
t -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> RelExp
s -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
RelExp < AddExp -> RelExp
RelExp -> EqExp
EqExp -> LAndExp
LAndExp -> LOrExp
LOrExp -> Cond
a -> LVal
1 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
LVal = Exp ; -> Stmt
Stmt -> BlockItem
BlockItem -> BlockGroup
{ BlockGroup } -> Block
Block -> Stmt
b -> LVal
3 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
LVal = Exp ; -> Stmt
Stmt -> BlockItem
BlockItem -> BlockGroup
{ BlockGroup } -> Block
Block -> Stmt
if ( Cond ) Stmt else Stmt -> Stmt
Stmt -> BlockItem
BlockItem -> BlockGroup
{ BlockGroup } -> Block
Block -> Stmt
if ( Cond ) Stmt -> Stmt
Stmt -> BlockItem
BlockGroup BlockItem -> BlockGroup
t -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> RelExp
a -> LVal
LVal -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
RelExp > AddExp -> RelExp
RelExp -> EqExp
EqExp -> LAndExp
LAndExp -> LOrExp
LOrExp -> Cond
c -> LVal
4 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
LVal = Exp ; -> Stmt
Stmt -> BlockItem
BlockItem -> BlockGroup
{ BlockGroup } -> Block
Block -> Stmt
t -> LVal
5 -> PrimaryExp
PrimaryExp -> UnaryExp
UnaryExp -> MulExp
MulExp -> AddExp
AddExp -> Exp
LVal = Exp ; -> Stmt
Stmt -> BlockItem
BlockItem -> BlockGroup
{ BlockGroup } -> Block
Block -> Stmt
if ( Cond ) Stmt else Stmt -> Stmt
Stmt -> BlockItem
BlockGroup BlockItem -> BlockGroup
{ BlockGroup } -> Block
Block -> Stmt
return ; -> Stmt
Stmt -> BlockItem
BlockItem -> BlockGroup
{ BlockGroup } -> Block
Block -> Stmt
if ( Cond ) Stmt else Stmt -> Stmt
Stmt -> BlockItem
BlockItem -> BlockGroup
{ BlockGroup } -> Block
int main ( ) Block -> FuncDef
FuncDef -> CompUnit
